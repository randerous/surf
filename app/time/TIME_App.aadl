package TIME_App
public
	with Component;
	with TIME_Sugar;
	with Core;
	
	thread TIMEAPP extends Component::Component
		features
			EVSAPI: refined to feature group TIME_Sugar::EVSAPIOutput;
			ESAPI: refined to feature group TIME_Sugar::ESAPIOutput;
			SBAPI: refined to feature group TIME_Sugar::SBAPIOutput;
			TIMEAPI: refined to feature group Core::TIMEAPIR;
		
		annex agree{**
			guarantee "Send HK info": true ->  (Command.MsgId = 1) =>
			SBAPI.SendMsgArgs.Activiated = true 
			and SBAPI.SendMsgArgs.Msg.MsgId = 1
			and SBAPI.SendMsgArgs.Msg.AppId = 3;
		**};

	end TIMEAPP;
	
	thread implementation TIMEAPP.impl extends Component::Component.default
		subcomponents
			Medium: refined to abstract TIME_Sugar::Medium;
			Checker: refined to abstract TIME_Sugar::Checker;
			-------------Command processor

			-------------Base task

		connections			
			----------------Route connection
			
			----------------Medium API Out
			MediumESAPI: feature group Medium.ESAPI -> ESAPI;
			
			----------------Task data needed
			
			----------------Checker result in
			
			----------------Medium processor api call collecttion connection			

	end TIMEAPP.impl;
end TIME_App;