package SB_Processor
public
	with Generic;
	with SB_Arg_IO;
	with SB_Result_IO;
	with SB_Base_IO;
	with SB_Route_Table;
	with EVS_Arg_IO;	
	--------all abstract can add external data corresponding to its require

	abstract CreatePipe extends Generic::FunctionProcessor
		features
			Args: refined to feature group SB_Arg_IO::CreatePipeArgs;
			Results: refined to feature group SB_Result_IO::CreatePipeOutput;
			LocalDatas: refined to feature group SB_Base_IO::PipeInput;
		
		annex agree{**			
			--error num is defined in Results defining.
			--    for return value
			--    SUCCESS:0
			--    SB_BAD_ARGUMENT:3 
			eq SUCCESS : int = 0;
			eq SB_BAD_ARGUMENT: int  = 3;
			eq maxDepth: int = 512;
			
			eq Check_Args_False : bool = Args.a.Depth > maxDepth or Args.a.Depth   <= 0;
			
			guarantee "return null for No Call ": Args.a.Activiated = false => Results.ReturnValue.Cmd_Called = -1;
			guarantee "send error event when getting in trouble by return error num":
			true-> (Args.a.Activiated = true and Check_Args_False = true) =>
			 Results.ReturnValue.Cmd_Called = SB_BAD_ARGUMENT;
			
			guarantee "activiate es pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 0) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 0 and 
			Results.Output.ES_CmdPipe.AppId = 0  and 
			Results.Output.ES_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.ES_CmdPipe.QueueDepth = Args.a.Depth ; 
			
			guarantee "activiate sb pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 1) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 1 and 
			Results.Output.SB_CmdPipe.AppId = 1 and 
			Results.Output.SB_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.SB_CmdPipe.QueueDepth = Args.a.Depth ; 
			
			guarantee "activiate evs pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 2) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 2 and 
			Results.Output.EVS_CmdPipe.AppId = 2 and 
			Results.Output.EVS_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.EVS_CmdPipe.QueueDepth = Args.a.Depth ; 
			
			guarantee "activiate time pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 3) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 3 and 
			Results.Output.TIME_CmdPipe.AppId = 3 and 
			Results.Output.TIME_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.TIME_CmdPipe.QueueDepth = Args.a.Depth ; 
			
			guarantee "activiate HS pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 5) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 5 and 
			Results.Output.HS_CmdPipe.AppId = 5 and 
			Results.Output.HS_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.HS_CmdPipe.QueueDepth = Args.a.Depth ; 

			guarantee "activiate CI pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 6) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 6 and 
			Results.Output.CI_CmdPipe.AppId = 6 and 
			Results.Output.CI_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.CI_CmdPipe.QueueDepth = Args.a.Depth ;

			guarantee "activiate TO pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 7) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 7 and 
			Results.Output.TO_CmdPipe.AppId = 7 and 
			Results.Output.TO_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.TO_CmdPipe.QueueDepth = Args.a.Depth ;

			guarantee "activiate HK pipe when call create basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 8) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 8 and 
			Results.Output.HK_CmdPipe.AppId = 8 and 
			Results.Output.HK_CmdPipe.PipeId = Args.a.PipeId and 
			Results.Output.HK_CmdPipe.QueueDepth = Args.a.Depth ;
			
		**};
	end CreatePipe;
	
	abstract DeletePipe extends Generic::FunctionProcessor
		features
			Args: refined to feature group SB_Arg_IO::DeletePipeArgs;
			Results: refined to feature group SB_Result_IO::DeletePipeOutput;
			LocalDatas: refined to feature group SB_Base_IO::PipeInput;
		annex agree{**
			--error num is defined in Results defining.
			--    for return value
			--    SUCCESS:0
			--    SB_BAD_ARGUMENT:3 
			eq SUCCESS : int = 0;
			eq SB_BAD_ARGUMENT: int  = 3;
			eq Check_Args_False : bool = Args.a.PipeId > 3 or Args.a.PipeId   < 0;
			
			guarantee "return null for No Call ": Args.a.Activiated = false => Results.ReturnValue.Cmd_Called = -1;
			guarantee "send error event when getting in trouble by return error num":
			true-> (Args.a.Activiated = true and Check_Args_False = true) =>
			 Results.ReturnValue.Cmd_Called = SB_BAD_ARGUMENT;
			
			guarantee "delete es pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 0) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 0 ;
			
			 
			guarantee "delete sb pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 1) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 1 ;
			
			guarantee "delete evs pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 2) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 2 ;
			
			guarantee "delete time pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 3) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 3 ;
			
			guarantee "delete hs pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 5) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 5 ;


			guarantee "delete ci pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 6) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 6 ;

			guarantee "delete to pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 7) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 7 ;

			guarantee "delete hk pipe when call delete basing on localData":  
			true->(Args.a.Activiated = true and Check_Args_False = false and Args.a.AppId = 8) =>
			Results.ReturnValue.Cmd_Called = SUCCESS and 
			Results.ReturnValue.Modified_PipeId = 8 ;
		**};
	end DeletePipe;
	
-------------------------------------------------------------------------
--func(msgID,pipeID) 
--means, for each entry including mapping like: (pipeID subscribe MsgID), send msg to responding pipes.
--for implementing route table
--we should cut msgId into three classes
--MsgId 0: for event
--MsgId 1: for core app's msg 
--MsgId 2: for sample app's msg

--Note:
--call to modify route or pipe, will be updated in ShareData in this time ,based on last OldData.,
--so, whenever a  call try to modify sth, it should base the last data. 
	abstract Subscribe extends Generic::FunctionProcessor
		features
			Args: refined to feature group SB_Arg_IO::SubscribeArgs;
			Results: refined to feature group SB_Result_IO::SubscribeOutput;
			LocalDatas: refined to feature group SB_Base_IO::RouteInput;
			
			annex agree{**
			 
				guarantee "return null for No Call ": Args.a.Activiated = false => Results.ReturnValue.Cmd_Called = -1;
				
				--there need to be sth rules to check args,
				eq SUCCESS : int = 0;
				eq SB_BAD_ARGUMENT: int  = 3;	
				eq SB_MAX_PIPES: int = 8;--for now , only 5 max supported
				--here check whether pipe is out of range.
				eq ARG_PIPE_OUT_OF_RANGE: bool =  Args.a.PipeId < 0 or Args.a.PipeId > SB_MAX_PIPES or Args.a.PipeId = 4 ;--4 is not in used now
				eq MSGID_INVALID: bool = Args.a.MsgId < 0 or  Args.a.MsgId > 2;
				guarantee "check whether pipe is in use and msgid is valid": 
				 Args.a.Activiated = true and 
				 (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)
				=>  Results.ReturnValue.Cmd_Called = SB_BAD_ARGUMENT;
				
				guarantee "activiate msg router entry for event":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 0 and 
				 (if(Args.a.PipeId = 0 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.ES_Pipe = true
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.SB_Pipe = true
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.EVS_Pipe = true
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.TIME_Pipe = true
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = true
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = true
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = true
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = true
				 	)
				 	else (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 );
				 
				 guarantee "activiate msg router entry for hk msg":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 1 and 
				 (if(Args.a.PipeId = 0 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.ES_Pipe = true
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.SB_Pipe = true
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = true
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = true
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = true
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = true
					 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = true
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = true
				 	)
				 	else (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 );
			 
				 
				 
				 guarantee "activiate msg router entry for common msg":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 2 and
				  (if(Args.a.PipeId = 0 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.ES_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.SB_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = true
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = true
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = true
				 	)
				 	else (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 ); 
				 	

				
				
				
			**};
	end Subscribe;
	
	abstract Unsubscribe extends Generic::FunctionProcessor
		features
			Args: refined to feature group SB_Arg_IO::UnsubscribeArgs;
			Results: refined to feature group SB_Result_IO::UnsubscribeOutput;
			LocalDatas: refined to feature group SB_Base_IO::RouteInput;
			
		annex agree{**
				guarantee "return null for No Call ": Args.a.Activiated = false => Results.ReturnValue.Cmd_Called = -1;			
				--there need to be sth rules to check args,
				eq SUCCESS : int = 0;
				eq SB_BAD_ARGUMENT: int  = 3;	
				eq SB_MAX_PIPES: int = 8;--for now , only 8 max supported
				--here check whether pipe is out of range.
				eq ARG_PIPE_OUT_OF_RANGE: bool =  Args.a.PipeId < 0 or Args.a.PipeId > SB_MAX_PIPES or Args.a.PipeId = 4 ;--4 is not in used now
				eq MSGID_INVALID: bool = Args.a.MsgId < 0 or  Args.a.MsgId > 2;
				guarantee "check whether pipe is in use and msgid is valid": 
				 Args.a.Activiated = true and 
				 (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)
				=>  Results.ReturnValue.Cmd_Called = SB_BAD_ARGUMENT;
				
				guarantee "delete msg router entry for event":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 0 and 
				 (if(Args.a.PipeId = 0 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.ES_Pipe = false
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.SB_Pipe = false
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.EVS_Pipe = false
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.TIME_Pipe = false
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = false
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = false
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = false
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 0)
				 	then (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.TO_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = false
				 	)
				 	else (Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.EVS_Pipe = pre(LocalDatas.Event_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Event_Router.RouteList.ES_Pipe = pre(LocalDatas.Event_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Event_Router.RouteList.SB_Pipe = pre(LocalDatas.Event_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Event_Router.RouteList.TIME_Pipe = pre(LocalDatas.Event_Router.RouteList.TIME_Pipe)
					 and Results.Output.Event_Router.RouteList.CI_Pipe = pre(LocalDatas.Event_Router.RouteList.CI_Pipe)
					 and Results.Output.Event_Router.RouteList.HS_Pipe = pre(LocalDatas.Event_Router.RouteList.TO_Pipe)
					 and Results.Output.Event_Router.RouteList.HK_Pipe = pre(LocalDatas.Event_Router.RouteList.HK_Pipe)
				 	)
				 );
				 
				 guarantee "delete msg router entry for hk msg":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 1 and 
				(if(Args.a.PipeId = 0 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.ES_Pipe = false
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.SB_Pipe = false
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = false
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = false
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = false
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = false
					 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = false
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 1)
				 	then (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = false
				 	)
				 	else (Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.HK_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.HK_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe)
				 	)
				 );
				 
				 
				guarantee "delete msg router entry for common msg":
				true-> (Args.a.Activiated = true and 
				 not (ARG_PIPE_OUT_OF_RANGE or MSGID_INVALID)) =>
				 Results.ReturnValue.Cmd_Called = SUCCESS and
				 Results.ReturnValue.Modified_RouteId = 2 and
				  (if(Args.a.PipeId = 0 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.ES_Pipe = true
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)

				 	)
				 	else if(Args.a.PipeId = 1 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.SB_Pipe = false
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 2 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = false
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 3 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = false
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 	else if(Args.a.PipeId = 5 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = false
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 6 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = false
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 7 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = false
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
					else if(Args.a.PipeId = 8 and Args.a.MsgId = 2)
				 	then (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.TO_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = false
				 	)
				 	else (Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.EVS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.ES_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.SB_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe)
				 	 and Results.Output.Common_Msg_Router.RouteList.TIME_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.CI_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HS_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe)
					 and Results.Output.Common_Msg_Router.RouteList.HK_Pipe = pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe)
				 	)
				 ); 
				 	

			**};
	end Unsubscribe;
	
	abstract SendMsg extends Generic::FunctionProcessor
		features
			MsgArgs: feature group SB_Arg_IO::SendMsgArgs;
			EvtArgs: feature group EVS_Arg_IO::SendEventArgs;
--			Results: refined to feature group SB_Result_IO::SendMsgOutput;
			LocalDatas: refined to feature group SB_Base_IO::RouteInput;
			OutMsgs: feature group SB_Route_Table::RouteOutput;
			
	    annex agree{**
			eq NO_ACTIVIATED: bool = (MsgArgs.Activiated  = false and EvtArgs.Activiated = false);
	    	eq MSGID_INVALID: bool = MsgArgs.a.Msg.MsgId < 0 or  MsgArgs.a.Msg.MsgId > 2;
	    	--msgId = -1 denotes: No msg
	    	eq EVT_INVALID: bool = EvtArgs.EvtPacket.Msg.MsgId <> 0 or EvtArgs.EvtPacket.Msg.EvtId <> 0  ;

			assume "Send Evt or Msg": not (MsgArgs.Activiated = true and EvtArgs.Activiated = true);
	    	guarantee "check msgId and EvtId validaty": 
	    	(OutMsgs.ES_CmdPipe_ES_Command.MsgId = -1 and 
	    		OutMsgs.SB_CmdPipe_SB_Command.MsgId = -1 and 
	    		OutMsgs.EVS_CmdPipe_EVS_Command.MsgId = -1 and 
	    		OutMsgs.TIME_CmdPipe_TIME_Command.MsgId = -1 and 
	    		OutMsgs.HS_CmdPipe_HS_Command.MsgId = -1  and
				OutMsgs.CI_CmdPipe_CI_Command.MsgId = -1  and
				OutMsgs.TO_CmdPipe_TO_Command.MsgId = -1 and 
				OutMsgs.HK_CmdPipe_HK_Command.MsgId = -1   ) 
	    	-> 
	    	(
				NO_ACTIVIATED or
				(MsgArgs.Activiated  = true and MSGID_INVALID) or
				(EvtArgs.Activiated  = true and EVT_INVALID)
			)
			=>
			(
	    		OutMsgs.ES_CmdPipe_ES_Command.MsgId = -1 and 
	    		OutMsgs.SB_CmdPipe_SB_Command.MsgId = -1 and 
	    		OutMsgs.EVS_CmdPipe_EVS_Command.MsgId = -1 and 
	    		OutMsgs.TIME_CmdPipe_TIME_Command.MsgId = -1 and 
	    		OutMsgs.HS_CmdPipe_HS_Command.MsgId = -1  and
				OutMsgs.CI_CmdPipe_CI_Command.MsgId = -1  and
				OutMsgs.TO_CmdPipe_TO_Command.MsgId = -1  and 
				OutMsgs.HK_CmdPipe_HK_Command.MsgId = -1     		
	    	);
	    	guarantee  "send event for evs": true -> 
	    	(EvtArgs.Activiated  = true and not EVT_INVALID)=>(
	    		(pre(LocalDatas.Event_Router.RouteList.ES_Pipe) = true => OutMsgs.ES_CmdPipe_ES_Command = EvtArgs.EvtPacket.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.SB_Pipe) = true => OutMsgs.SB_CmdPipe_SB_Command = EvtArgs.EvtPacket.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.EVS_Pipe) = true => OutMsgs.EVS_CmdPipe_EVS_Command = EvtArgs.EvtPacket.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.TIME_Pipe) = true => OutMsgs.TIME_CmdPipe_TIME_Command = EvtArgs.EvtPacket.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.HS_Pipe) = true => OutMsgs.HS_CmdPipe_HS_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.CI_Pipe) = true => OutMsgs.CI_CmdPipe_CI_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.TO_Pipe) = true => OutMsgs.TO_CmdPipe_TO_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.HK_Pipe) = true => OutMsgs.HK_CmdPipe_HK_Command = EvtArgs.EvtPacket.Msg)
	    	);

	    	guarantee  "send event for other": true -> 
	    	(MsgArgs.Activiated  = true and MsgArgs.a.Msg.MsgId = 0)=>(
	    		(pre(LocalDatas.Event_Router.RouteList.ES_Pipe) = true => OutMsgs.ES_CmdPipe_ES_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.SB_Pipe) = true => OutMsgs.SB_CmdPipe_SB_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.EVS_Pipe) = true => OutMsgs.EVS_CmdPipe_EVS_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.TIME_Pipe) = true => OutMsgs.TIME_CmdPipe_TIME_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Event_Router.RouteList.HS_Pipe) = true => OutMsgs.HS_CmdPipe_HS_Command = MsgArgs.a.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.CI_Pipe) = true => OutMsgs.CI_CmdPipe_CI_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.TO_Pipe) = true => OutMsgs.TO_CmdPipe_TO_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Event_Router.RouteList.HK_Pipe) = true => OutMsgs.HK_CmdPipe_HK_Command = EvtArgs.EvtPacket.Msg)
	    	);
	    	
	    	guarantee  "send hk msg": true -> 
	    	(MsgArgs.Activiated  = true and MsgArgs.a.Msg.MsgId = 1 ) =>(
	    		(pre(LocalDatas.HK_Msg_Router.RouteList.ES_Pipe) = true => OutMsgs.ES_CmdPipe_ES_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.HK_Msg_Router.RouteList.SB_Pipe) = true => OutMsgs.SB_CmdPipe_SB_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.HK_Msg_Router.RouteList.EVS_Pipe) = true => OutMsgs.EVS_CmdPipe_EVS_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.HK_Msg_Router.RouteList.TIME_Pipe) = true => OutMsgs.TIME_CmdPipe_TIME_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.HK_Msg_Router.RouteList.HS_Pipe) = true => OutMsgs.HS_CmdPipe_HS_Command = MsgArgs.a.Msg)
			and (pre(LocalDatas.HK_Msg_Router.RouteList.CI_Pipe) = true => OutMsgs.CI_CmdPipe_CI_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.HK_Msg_Router.RouteList.TO_Pipe) = true => OutMsgs.TO_CmdPipe_TO_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.HK_Msg_Router.RouteList.HK_Pipe) = true => OutMsgs.HK_CmdPipe_HK_Command = EvtArgs.EvtPacket.Msg)
	    	); 
	    	
	    	
	    	guarantee  "send common msg": true -> 
	    	(MsgArgs.Activiated  = true and MsgArgs.a.Msg.MsgId = 2 )=>(
	    		(pre(LocalDatas.Common_Msg_Router.RouteList.ES_Pipe) = true => OutMsgs.ES_CmdPipe_ES_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Common_Msg_Router.RouteList.SB_Pipe) = true => OutMsgs.SB_CmdPipe_SB_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Common_Msg_Router.RouteList.EVS_Pipe) = true => OutMsgs.EVS_CmdPipe_EVS_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Common_Msg_Router.RouteList.TIME_Pipe) = true => OutMsgs.TIME_CmdPipe_TIME_Command = MsgArgs.a.Msg)
	    	and (pre(LocalDatas.Common_Msg_Router.RouteList.HS_Pipe) = true => OutMsgs.HS_CmdPipe_HS_Command = MsgArgs.a.Msg)
			and (pre(LocalDatas.Common_Msg_Router.RouteList.CI_Pipe) = true => OutMsgs.CI_CmdPipe_CI_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Common_Msg_Router.RouteList.TO_Pipe) = true => OutMsgs.TO_CmdPipe_TO_Command = EvtArgs.EvtPacket.Msg)
			and (pre(LocalDatas.Common_Msg_Router.RouteList.HK_Pipe) = true => OutMsgs.HK_CmdPipe_HK_Command = EvtArgs.EvtPacket.Msg)
	    	);  
	    **};
	end SendMsg;
	
end SB_Processor;