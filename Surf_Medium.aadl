package Surf_Medium
public
	with SB_Route_Table;
	with Core_Types;
	--test for the ability of AGREE to model equaling of structs, it does 
--	abstract test
--		features
--			MsgInput: feature group SB_Route_Table::RouteInput;
--			
--			ES_CmdPipe_ES_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
--		annex agree{**
--			assume " ": MsgInput.ES_CmdPipe_ES_Command.MsgId = 2;
--			guarantee "": ES_CmdPipe_ES_Command.MsgId = 3;
--		**};	
--	end test;
	
--	abstract implementation test.impl
--		subcomponents
--			Me: abstract Medium;
--		connections
--			a: feature group MsgInput <-> Me.MsgInput;
--			b: port Me.ES_CmdPipe_ES_Command ->ES_CmdPipe_ES_Command;
--		annex agree{** 
--				
--		**};	
--	end test.impl;
--	
	abstract Medium
		features
			MsgInput: feature group SB_Route_Table::RouteInput;
			
			ES_CmdPipe_ES_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
			SB_CmdPipe_SB_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
			EVS_CmdPipe_EVS_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
			TIME_CmdPipe_TIME_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
			HS_CmdPipe_HS_Command: out data port Core_Types::struct.CFE_SB_Msg_t;
--			EVS_EVENT_MSG: out data port Core_Types::struct.CFE_SB_Msg_t;
        -- for transfer cmd msg to target app
        annex agree{**
        	guarantee  "to target es": ES_CmdPipe_ES_Command = MsgInput.ES_CmdPipe_ES_Command;
        	guarantee  "to target sb": SB_CmdPipe_SB_Command = MsgInput.SB_CmdPipe_SB_Command;
        	guarantee  "to target evs": EVS_CmdPipe_EVS_Command = MsgInput.EVS_CmdPipe_EVS_Command;
        	guarantee  "to target time": TIME_CmdPipe_TIME_Command = MsgInput.TIME_CmdPipe_TIME_Command;
        	guarantee  "to target hs": HS_CmdPipe_HS_Command = MsgInput.HS_CmdPipe_HS_Command;
        **};
        
        
	end Medium;
end Surf_Medium;